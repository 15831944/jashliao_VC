#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Xml.dll>
#using <System.Web.Services.dll>
#using <System.EnterpriseServices.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace TService {
    using namespace System::Diagnostics;
    using namespace System::Web::Services;
    using namespace System::ComponentModel;
    using namespace System::Web::Services::Protocols;
    using namespace System;
    using namespace System::Xml::Serialization;
    using namespace System;
    ref class TranslateService;
    ref class TranslateCompletedEventArgs;
    
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::SerializableAttribute, 
    System::Xml::Serialization::XmlTypeAttribute(Namespace=L"http://www.webservicex.net")]
    public enum class Language {
        
        /// <remarks/>
        EnglishTOChinese,
        
        /// <remarks/>
        EnglishTOFrench,
        
        /// <remarks/>
        EnglishTOGerman,
        
        /// <remarks/>
        EnglishTOItalian,
        
        /// <remarks/>
        EnglishTOJapanese,
        
        /// <remarks/>
        EnglishTOKorean,
        
        /// <remarks/>
        EnglishTOPortuguese,
        
        /// <remarks/>
        EnglishTOSpanish,
        
        /// <remarks/>
        ChineseTOEnglish,
        
        /// <remarks/>
        FrenchTOEnglish,
        
        /// <remarks/>
        FrenchTOGerman,
        
        /// <remarks/>
        GermanTOEnglish,
        
        /// <remarks/>
        GermanTOFrench,
        
        /// <remarks/>
        ItalianTOEnglish,
        
        /// <remarks/>
        JapaneseTOEnglish,
        
        /// <remarks/>
        KoreanTOEnglish,
        
        /// <remarks/>
        PortugueseTOEnglish,
        
        /// <remarks/>
        RussianTOEnglish,
        
        /// <remarks/>
        SpanishTOEnglish,
        
        /// <remarks/>
        SpanishToFrench,
        
        /// <remarks/>
        PortugueseToFrench,
        
        /// <remarks/>
        ItalianToFrench,
        
        /// <remarks/>
        GreekToFrench,
        
        /// <remarks/>
        GermanToFrench,
        
        /// <remarks/>
        FrenchToGreek,
        
        /// <remarks/>
        FrenchToItalian,
        
        /// <remarks/>
        FrenchToPortuguese,
        
        /// <remarks/>
        FrenchToDutch,
        
        /// <remarks/>
        FrenchToSpanish,
        
        /// <remarks/>
        EnglishToRussian,
        
        /// <remarks/>
        EnglishToDutch,
        
        /// <remarks/>
        DutchToEnglish,
        
        /// <remarks/>
        DutchToFrench,
        
        /// <remarks/>
        GreekToEnglish,
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void TranslateCompletedEventHandler(System::Object^  sender, TService::TranslateCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::Web::Services::WebServiceBindingAttribute(Name=L"TranslateServiceSoap", Namespace=L"http://www.webservicex.net")]
    public ref class TranslateService : public System::Web::Services::Protocols::SoapHttpClientProtocol {
        
        private: System::Threading::SendOrPostCallback^  TranslateOperationCompleted;
        
        /// <remarks/>
        public: event TService::TranslateCompletedEventHandler^  TranslateCompleted;
        
        /// <remarks/>
        public: TranslateService();
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://www.webservicex.net/Translate", RequestNamespace=L"http://www.webservicex.net", 
            ResponseNamespace=L"http://www.webservicex.net", Use=System::Web::Services::Description::SoapBindingUse::Literal, ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::String^  Translate(TService::Language LanguageMode, System::String^  Text);
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginTranslate(TService::Language LanguageMode, System::String^  Text, System::AsyncCallback^  callback, 
                    System::Object^  asyncState);
        
        /// <remarks/>
        public: System::String^  EndTranslate(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void TranslateAsync(TService::Language LanguageMode, System::String^  Text);
        
        /// <remarks/>
        public: System::Void TranslateAsync(TService::Language LanguageMode, System::String^  Text, System::Object^  userState);
        
        private: System::Void OnTranslateOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: System::Void CancelAsync(System::Object^  userState) new;
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class TranslateCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: TranslateCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, System::Boolean cancelled, 
                    System::Object^  userState);
        /// <remarks/>
        public: property System::String^  Result {
            System::String^  get();
        }
    };
}
namespace TService {
    
    
    
    inline TranslateService::TranslateService() {
        this->Url = L"http://www.webservicex.net/TranslateService.asmx";
    }
    
    inline System::String^  TranslateService::Translate(TService::Language LanguageMode, System::String^  Text) {
        cli::array< System::Object^  >^  results = this->Invoke(L"Translate", gcnew cli::array< System::Object^  >(2) {LanguageMode, 
                Text});
        return (cli::safe_cast<System::String^  >(results[0]));
    }
    
    inline System::IAsyncResult^  TranslateService::BeginTranslate(TService::Language LanguageMode, System::String^  Text, 
                System::AsyncCallback^  callback, System::Object^  asyncState) {
        return this->BeginInvoke(L"Translate", gcnew cli::array< System::Object^  >(2) {LanguageMode, Text}, callback, asyncState);
    }
    
    inline System::String^  TranslateService::EndTranslate(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (cli::safe_cast<System::String^  >(results[0]));
    }
    
    inline System::Void TranslateService::TranslateAsync(TService::Language LanguageMode, System::String^  Text) {
        this->TranslateAsync(LanguageMode, Text, nullptr);
    }
    
    inline System::Void TranslateService::TranslateAsync(TService::Language LanguageMode, System::String^  Text, System::Object^  userState) {
        if (this->TranslateOperationCompleted == nullptr) {
            this->TranslateOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &TService::TranslateService::OnTranslateOperationCompleted);
        }
        this->InvokeAsync(L"Translate", gcnew cli::array< System::Object^  >(2) {LanguageMode, Text}, this->TranslateOperationCompleted, 
            userState);
    }
    
    inline System::Void TranslateService::OnTranslateOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->TranslateCompleted(this, (gcnew TService::TranslateCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Void TranslateService::CancelAsync(System::Object^  userState) {
        __super::CancelAsync(userState);
    }
    
    
    inline TranslateCompletedEventArgs::TranslateCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::String^  TranslateCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (cli::safe_cast<System::String^  >(this->results[0]));
    }
}
