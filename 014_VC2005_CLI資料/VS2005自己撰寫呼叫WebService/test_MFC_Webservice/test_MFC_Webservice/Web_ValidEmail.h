#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Xml.dll>
#using <System.Web.Services.dll>
#using <System.EnterpriseServices.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace Web_ValidEmail {
    using namespace System::Diagnostics;
    using namespace System::Web::Services;
    using namespace System::ComponentModel;
    using namespace System::Web::Services::Protocols;
    using namespace System;
    using namespace System::Xml::Serialization;
    using namespace System;
    ref class ValidateEmail;
    ref class IsValidEmailCompletedEventArgs;
    
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42")]
    public delegate System::Void IsValidEmailCompletedEventHandler(System::Object^  sender, Web_ValidEmail::IsValidEmailCompletedEventArgs^  e);
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::Web::Services::WebServiceBindingAttribute(Name=L"ValidateEmailSoap", Namespace=L"http://www.webservicex.net")]
    public ref class ValidateEmail : public System::Web::Services::Protocols::SoapHttpClientProtocol {
        
        private: System::Threading::SendOrPostCallback^  IsValidEmailOperationCompleted;
        
        /// <remarks/>
        public: event Web_ValidEmail::IsValidEmailCompletedEventHandler^  IsValidEmailCompleted;
        
        /// <remarks/>
        public: ValidateEmail();
        /// <remarks/>
        public: [System::Web::Services::Protocols::SoapDocumentMethodAttribute(L"http://www.webservicex.net/IsValidEmail", RequestNamespace=L"http://www.webservicex.net", 
            ResponseNamespace=L"http://www.webservicex.net", Use=System::Web::Services::Description::SoapBindingUse::Literal, ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]
        System::Boolean IsValidEmail(System::String^  Email);
        
        /// <remarks/>
        public: System::IAsyncResult^  BeginIsValidEmail(System::String^  Email, System::AsyncCallback^  callback, System::Object^  asyncState);
        
        /// <remarks/>
        public: System::Boolean EndIsValidEmail(System::IAsyncResult^  asyncResult);
        
        /// <remarks/>
        public: System::Void IsValidEmailAsync(System::String^  Email);
        
        /// <remarks/>
        public: System::Void IsValidEmailAsync(System::String^  Email, System::Object^  userState);
        
        private: System::Void OnIsValidEmailOperationCompleted(System::Object^  arg);
        
        /// <remarks/>
        public: System::Void CancelAsync(System::Object^  userState) new;
    };
    
    /// <remarks/>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.42"), 
    System::Diagnostics::DebuggerStepThroughAttribute, 
    System::ComponentModel::DesignerCategoryAttribute(L"code")]
    public ref class IsValidEmailCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
        
        private: cli::array< System::Object^  >^  results;
        
        internal: IsValidEmailCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                    System::Boolean cancelled, System::Object^  userState);
        /// <remarks/>
        public: property System::Boolean Result {
            System::Boolean get();
        }
    };
}
namespace Web_ValidEmail {
    
    
    inline ValidateEmail::ValidateEmail() {
        this->Url = L"http://www.webservicex.com/ValidateEmail.asmx";
    }
    
    inline System::Boolean ValidateEmail::IsValidEmail(System::String^  Email) {
        cli::array< System::Object^  >^  results = this->Invoke(L"IsValidEmail", gcnew cli::array< System::Object^  >(1) {Email});
        return (cli::safe_cast<System::Boolean >(results[0]));
    }
    
    inline System::IAsyncResult^  ValidateEmail::BeginIsValidEmail(System::String^  Email, System::AsyncCallback^  callback, 
                System::Object^  asyncState) {
        return this->BeginInvoke(L"IsValidEmail", gcnew cli::array< System::Object^  >(1) {Email}, callback, asyncState);
    }
    
    inline System::Boolean ValidateEmail::EndIsValidEmail(System::IAsyncResult^  asyncResult) {
        cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
        return (cli::safe_cast<System::Boolean >(results[0]));
    }
    
    inline System::Void ValidateEmail::IsValidEmailAsync(System::String^  Email) {
        this->IsValidEmailAsync(Email, nullptr);
    }
    
    inline System::Void ValidateEmail::IsValidEmailAsync(System::String^  Email, System::Object^  userState) {
        if (this->IsValidEmailOperationCompleted == nullptr) {
            this->IsValidEmailOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &Web_ValidEmail::ValidateEmail::OnIsValidEmailOperationCompleted);
        }
        this->InvokeAsync(L"IsValidEmail", gcnew cli::array< System::Object^  >(1) {Email}, this->IsValidEmailOperationCompleted, 
            userState);
    }
    
    inline System::Void ValidateEmail::OnIsValidEmailOperationCompleted(System::Object^  arg) {
        {
            System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
            this->IsValidEmailCompleted(this, (gcnew Web_ValidEmail::IsValidEmailCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, 
                    invokeArgs->Cancelled, invokeArgs->UserState)));
        }
    }
    
    inline System::Void ValidateEmail::CancelAsync(System::Object^  userState) {
        __super::CancelAsync(userState);
    }
    
    
    inline IsValidEmailCompletedEventArgs::IsValidEmailCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
                System::Boolean cancelled, System::Object^  userState) : 
            System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
        this->results = results;
    }
    
    inline System::Boolean IsValidEmailCompletedEventArgs::Result::get() {
        this->RaiseExceptionIfNecessary();
        return (cli::safe_cast<System::Boolean >(this->results[0]));
    }
}
